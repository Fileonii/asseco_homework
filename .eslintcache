[{"D:\\Projekty\\GitProjekty\\asseco\\src\\index.js":"1","D:\\Projekty\\GitProjekty\\asseco\\src\\reportWebVitals.js":"2","D:\\Projekty\\GitProjekty\\asseco\\src\\App.js":"3","D:\\Projekty\\GitProjekty\\asseco\\src\\components\\getData.js":"4","D:\\Projekty\\GitProjekty\\asseco\\src\\components\\FormComponent.js":"5","D:\\Projekty\\GitProjekty\\asseco\\src\\components\\SubmitComponent.js":"6"},{"size":479,"mtime":1608323646091,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":259,"mtime":1608381534679,"results":"10","hashOfConfig":"8"},{"size":3465,"mtime":1608756128997,"results":"11","hashOfConfig":"8"},{"size":2318,"mtime":1608720985908,"results":"12","hashOfConfig":"8"},{"size":718,"mtime":1608655212015,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1lwx3sw",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"D:\\Projekty\\GitProjekty\\asseco\\src\\index.js",[],["30","31"],"D:\\Projekty\\GitProjekty\\asseco\\src\\reportWebVitals.js",[],"D:\\Projekty\\GitProjekty\\asseco\\src\\App.js",["32"],"import logo from \"./logo.svg\";\nimport \"./style/App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport GetData from \"./components/getData\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GetData />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Projekty\\GitProjekty\\asseco\\src\\components\\getData.js",["33","34","35","36","37","38"],"D:\\Projekty\\GitProjekty\\asseco\\src\\components\\FormComponent.js",["39","40","41","42","43","44","45","46","47"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { Form, Button, Spinner } from \"react-bootstrap\";\r\n\r\nfunction FormComponent({ controls, value, onTestChange }) {\r\n  const inputType = value.type.toLowerCase();\r\n\r\n  function handleCheck(val) {\r\n    if (val == \"true\") {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  function handleCheckbox(e) {\r\n    const handleObj = {\r\n      key: `${value.key}`,\r\n      value: e.target.checked,\r\n    };\r\n    onTestChange(handleObj);\r\n  }\r\n\r\n  function handleChange(e) {\r\n    const handleObj = {\r\n      key: `${value.key}`,\r\n      value: e.target.value,\r\n    };\r\n\r\n    onTestChange(handleObj);\r\n  }\r\n  const makeComponent = () => {\r\n    if (inputType == \"checkbox\") {\r\n      return (\r\n        <div>\r\n          <Form.Group className=\"d-flex\" controlId={`${value.key}`}>\r\n            <Form.Control\r\n              defaultChecked={handleCheck(value.defaultValue)}\r\n              onChange={handleCheckbox}\r\n              type={`${inputType}`}\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n      );\r\n    }\r\n    if (inputType == \"text\") {\r\n      return (\r\n        <div>\r\n          <Form.Group controlId={`${value.key}`}>\r\n            <Form.Label>{value.caption}</Form.Label>\r\n            <Form.Control\r\n              defaultValue={value.defaultValue}\r\n              onChange={handleChange}\r\n              type={`${inputType}`}\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n      );\r\n    } else if (inputType == \"list\") {\r\n      const selectItems = value.items;\r\n      return (\r\n        <div>\r\n          <Form.Group controlId={`${value.key}`}>\r\n            <Form.Label>{value.caption}</Form.Label>\r\n            <Form.Control\r\n              defaultValue={value.defaultValue}\r\n              onChange={handleChange}\r\n              as=\"select\"\r\n            >\r\n              {selectItems.map((item, i = 0) => (\r\n                <option key={`${i}-${controls}`} value={`${item.value}`}>\r\n                  {item.caption}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  useEffect(() => {}, [controls]);\r\n  return makeComponent();\r\n}\r\n\r\nexport default FormComponent;\r\n","D:\\Projekty\\GitProjekty\\asseco\\src\\components\\SubmitComponent.js",["48","49"],"import { Button } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction SubmitComponent({ submitValues }) {\r\n  let today = new Date();\r\n  var dd = String(today.getDate()).padStart(2, \"0\");\r\n  var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n  var yyyy = today.getFullYear();\r\n\r\n  today = `${yyyy}${mm}${dd}`;\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <Button\r\n        href={`data:text/json;charset=utf-8,${encodeURIComponent(\r\n          JSON.stringify(submitValues)\r\n        )}`}\r\n        download={`jsonFile${today}.json`}\r\n      >\r\n        SUBMIT FORM!\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubmitComponent;\r\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":12},{"ruleId":"54","severity":1,"message":"58","line":3,"column":8,"nodeType":"56","messageId":"57","endLine":3,"endColumn":18},{"ruleId":"54","severity":1,"message":"59","line":4,"column":16,"nodeType":"56","messageId":"57","endLine":4,"endColumn":22},{"ruleId":"54","severity":1,"message":"60","line":8,"column":20,"nodeType":"56","messageId":"57","endLine":8,"endColumn":31},{"ruleId":"54","severity":1,"message":"61","line":14,"column":9,"nodeType":"56","messageId":"57","endLine":14,"endColumn":12},{"ruleId":"62","severity":1,"message":"63","line":19,"column":16,"nodeType":"64","messageId":"65","endLine":19,"endColumn":18},{"ruleId":"66","severity":1,"message":"67","line":80,"column":6,"nodeType":"68","endLine":80,"endColumn":14,"suggestions":"69"},{"ruleId":"54","severity":1,"message":"70","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":13},{"ruleId":"54","severity":1,"message":"71","line":2,"column":28,"nodeType":"56","messageId":"57","endLine":2,"endColumn":36},{"ruleId":"54","severity":1,"message":"58","line":3,"column":8,"nodeType":"56","messageId":"57","endLine":3,"endColumn":18},{"ruleId":"54","severity":1,"message":"59","line":4,"column":16,"nodeType":"56","messageId":"57","endLine":4,"endColumn":22},{"ruleId":"54","severity":1,"message":"72","line":4,"column":24,"nodeType":"56","messageId":"57","endLine":4,"endColumn":31},{"ruleId":"62","severity":1,"message":"73","line":10,"column":13,"nodeType":"64","messageId":"65","endLine":10,"endColumn":15},{"ruleId":"62","severity":1,"message":"73","line":33,"column":19,"nodeType":"64","messageId":"65","endLine":33,"endColumn":21},{"ruleId":"62","severity":1,"message":"73","line":46,"column":19,"nodeType":"64","messageId":"65","endLine":46,"endColumn":21},{"ruleId":"62","severity":1,"message":"73","line":59,"column":26,"nodeType":"64","messageId":"65","endLine":59,"endColumn":28},{"ruleId":"54","severity":1,"message":"74","line":2,"column":17,"nodeType":"56","messageId":"57","endLine":2,"endColumn":26},{"ruleId":"54","severity":1,"message":"71","line":2,"column":28,"nodeType":"56","messageId":"57","endLine":2,"endColumn":36},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ClipLoader' is defined but never used.","'Button' is defined but never used.","'setControls' is assigned a value but never used.","'url' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initializeValues'. Either include it or remove the dependency array.","ArrayExpression",["77"],"'axios' is defined but never used.","'useState' is defined but never used.","'Spinner' is defined but never used.","Expected '===' and instead saw '=='.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [apiWeb, initializeValues]",{"range":"80","text":"81"},[2190,2198],"[apiWeb, initializeValues]"]