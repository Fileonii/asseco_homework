[{"D:\\Projekty\\GitProjekty\\asseco\\client\\src\\index.js":"1","D:\\Projekty\\GitProjekty\\asseco\\client\\src\\reportWebVitals.js":"2","D:\\Projekty\\GitProjekty\\asseco\\client\\src\\App.js":"3","D:\\Projekty\\GitProjekty\\asseco\\client\\src\\components\\getData.js":"4","D:\\Projekty\\GitProjekty\\asseco\\client\\src\\components\\FormComponent.js":"5","D:\\Projekty\\GitProjekty\\asseco\\client\\src\\components\\SubmitComponent.js":"6"},{"size":479,"mtime":1608323646091,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":259,"mtime":1608381534679,"results":"10","hashOfConfig":"8"},{"size":3422,"mtime":1608758150896,"results":"11","hashOfConfig":"8"},{"size":2318,"mtime":1608720985908,"results":"12","hashOfConfig":"8"},{"size":718,"mtime":1608655212015,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"12r5twm",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"16"},"D:\\Projekty\\GitProjekty\\asseco\\client\\src\\index.js",[],["32","33"],"D:\\Projekty\\GitProjekty\\asseco\\client\\src\\reportWebVitals.js",[],"D:\\Projekty\\GitProjekty\\asseco\\client\\src\\App.js",["34"],"import logo from \"./logo.svg\";\nimport \"./style/App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport GetData from \"./components/getData\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GetData />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Projekty\\GitProjekty\\asseco\\client\\src\\components\\getData.js",["35","36","37","38","39"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { Form, Button, Spinner } from \"react-bootstrap\";\r\nimport FormComponent from \"./FormComponent\";\r\nimport SubmitComponent from \"./SubmitComponent\";\r\nfunction GetData() {\r\n  const [controls, setControls] = useState([\"---\", \"controls1\", \"controls2\"]);\r\n  const [choose, setChoose] = useState(controls[0]);\r\n  const [apiWeb, setApiWeb] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [test, setTest] = useState([]);\r\n\r\n  const AddOption = controls.map((AddOption) => AddOption);\r\n\r\n  const getErp = (choose) => {\r\n    if (choose != \"---\") {\r\n      setTest([]);\r\n      try {\r\n        axios.get(`${choose}`).then((response) => {\r\n          setApiWeb(response.data.controls);\r\n        });\r\n        setLoading(true);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const initializeValues = () => {\r\n    if (test.length > 0) {\r\n      setTest([]);\r\n    }\r\n    const arrayValue = apiWeb.map((value) => ({\r\n      key: `${value.key}`,\r\n      content: `${value.defaultValue}`,\r\n    }));\r\n    setTest(arrayValue);\r\n  };\r\n  const handleApiChoose = (e) => {\r\n    setApiWeb([]);\r\n    setChoose(controls[e.target.value]);\r\n    getErp(controls[e.target.value]);\r\n  };\r\n  const handleChange = (e) => {\r\n    let arrayValue = test.slice();\r\n    for (let index = 0; index < arrayValue.length; index++) {\r\n      if (arrayValue[index].key === e.key) {\r\n        arrayValue[index] = {\r\n          ...arrayValue[index],\r\n          content: `${e.value}`,\r\n        };\r\n      }\r\n    }\r\n\r\n    setTest(arrayValue);\r\n  };\r\n\r\n  const formPainting = () => {\r\n    return (\r\n      <Form className=\"m-5 \">\r\n        {apiWeb.map((value) => (\r\n          <div className=\"mx-3\">\r\n            <FormComponent\r\n              onTestChange={handleChange}\r\n              controls={choose}\r\n              value={value}\r\n            ></FormComponent>\r\n          </div>\r\n        ))}\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    initializeValues();\r\n  }, [apiWeb]);\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"upper-section\">\r\n        <h1 className=\"d-flex justify-content-center title-app\">\r\n          Demo Generic App\r\n        </h1>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <div className=\"m-5 select-web \">\r\n            <select\r\n              onChange={(e) => handleApiChoose(e)}\r\n              className=\"form-control\"\r\n            >\r\n              {AddOption.map((api, key) => (\r\n                <option key={api} value={key}>\r\n                  {api}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {loading ? (\r\n        <div className=\"form-box\">\r\n          {apiWeb ? formPainting() : null}\r\n          <SubmitComponent submitValues={test}></SubmitComponent>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h3 className=\"d-flex justify-content-center mt-5\">Empty!</h3>\r\n          <h6 className=\"d-flex justify-content-center mt-5\">\r\n            Choose one of controls option!\r\n          </h6>\r\n          <div className=\"d-flex justify-content-center m-5\">\r\n            <Spinner animation=\"border\"></Spinner>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GetData;\r\n","D:\\Projekty\\GitProjekty\\asseco\\client\\src\\components\\FormComponent.js",["40","41","42","43","44","45","46","47","48"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { Form, Button, Spinner } from \"react-bootstrap\";\r\n\r\nfunction FormComponent({ controls, value, onTestChange }) {\r\n  const inputType = value.type.toLowerCase();\r\n\r\n  function handleCheck(val) {\r\n    if (val == \"true\") {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  function handleCheckbox(e) {\r\n    const handleObj = {\r\n      key: `${value.key}`,\r\n      value: e.target.checked,\r\n    };\r\n    onTestChange(handleObj);\r\n  }\r\n\r\n  function handleChange(e) {\r\n    const handleObj = {\r\n      key: `${value.key}`,\r\n      value: e.target.value,\r\n    };\r\n\r\n    onTestChange(handleObj);\r\n  }\r\n  const makeComponent = () => {\r\n    if (inputType == \"checkbox\") {\r\n      return (\r\n        <div>\r\n          <Form.Group className=\"d-flex\" controlId={`${value.key}`}>\r\n            <Form.Control\r\n              defaultChecked={handleCheck(value.defaultValue)}\r\n              onChange={handleCheckbox}\r\n              type={`${inputType}`}\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n      );\r\n    }\r\n    if (inputType == \"text\") {\r\n      return (\r\n        <div>\r\n          <Form.Group controlId={`${value.key}`}>\r\n            <Form.Label>{value.caption}</Form.Label>\r\n            <Form.Control\r\n              defaultValue={value.defaultValue}\r\n              onChange={handleChange}\r\n              type={`${inputType}`}\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n      );\r\n    } else if (inputType == \"list\") {\r\n      const selectItems = value.items;\r\n      return (\r\n        <div>\r\n          <Form.Group controlId={`${value.key}`}>\r\n            <Form.Label>{value.caption}</Form.Label>\r\n            <Form.Control\r\n              defaultValue={value.defaultValue}\r\n              onChange={handleChange}\r\n              as=\"select\"\r\n            >\r\n              {selectItems.map((item, i = 0) => (\r\n                <option key={`${i}-${controls}`} value={`${item.value}`}>\r\n                  {item.caption}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  useEffect(() => {}, [controls]);\r\n  return makeComponent();\r\n}\r\n\r\nexport default FormComponent;\r\n",["49","50"],"D:\\Projekty\\GitProjekty\\asseco\\client\\src\\components\\SubmitComponent.js",["51","52"],"import { Button } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction SubmitComponent({ submitValues }) {\r\n  let today = new Date();\r\n  var dd = String(today.getDate()).padStart(2, \"0\");\r\n  var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n  var yyyy = today.getFullYear();\r\n\r\n  today = `${yyyy}${mm}${dd}`;\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <Button\r\n        href={`data:text/json;charset=utf-8,${encodeURIComponent(\r\n          JSON.stringify(submitValues)\r\n        )}`}\r\n        download={`jsonFile${today}.json`}\r\n      >\r\n        SUBMIT FORM!\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubmitComponent;\r\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":12},{"ruleId":"57","severity":1,"message":"61","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":18},{"ruleId":"57","severity":1,"message":"62","line":4,"column":16,"nodeType":"59","messageId":"60","endLine":4,"endColumn":22},{"ruleId":"57","severity":1,"message":"63","line":8,"column":20,"nodeType":"59","messageId":"60","endLine":8,"endColumn":31},{"ruleId":"64","severity":1,"message":"65","line":17,"column":16,"nodeType":"66","messageId":"67","endLine":17,"endColumn":18},{"ruleId":"68","severity":1,"message":"69","line":78,"column":6,"nodeType":"70","endLine":78,"endColumn":14,"suggestions":"71"},{"ruleId":"57","severity":1,"message":"72","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":13},{"ruleId":"57","severity":1,"message":"73","line":2,"column":28,"nodeType":"59","messageId":"60","endLine":2,"endColumn":36},{"ruleId":"57","severity":1,"message":"61","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":18},{"ruleId":"57","severity":1,"message":"62","line":4,"column":16,"nodeType":"59","messageId":"60","endLine":4,"endColumn":22},{"ruleId":"57","severity":1,"message":"74","line":4,"column":24,"nodeType":"59","messageId":"60","endLine":4,"endColumn":31},{"ruleId":"64","severity":1,"message":"75","line":10,"column":13,"nodeType":"66","messageId":"67","endLine":10,"endColumn":15},{"ruleId":"64","severity":1,"message":"75","line":33,"column":19,"nodeType":"66","messageId":"67","endLine":33,"endColumn":21},{"ruleId":"64","severity":1,"message":"75","line":46,"column":19,"nodeType":"66","messageId":"67","endLine":46,"endColumn":21},{"ruleId":"64","severity":1,"message":"75","line":59,"column":26,"nodeType":"66","messageId":"67","endLine":59,"endColumn":28},{"ruleId":"53","replacedBy":"76"},{"ruleId":"55","replacedBy":"77"},{"ruleId":"57","severity":1,"message":"78","line":2,"column":17,"nodeType":"59","messageId":"60","endLine":2,"endColumn":26},{"ruleId":"57","severity":1,"message":"73","line":2,"column":28,"nodeType":"59","messageId":"60","endLine":2,"endColumn":36},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ClipLoader' is defined but never used.","'Button' is defined but never used.","'setControls' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initializeValues'. Either include it or remove the dependency array.","ArrayExpression",["81"],"'axios' is defined but never used.","'useState' is defined but never used.","'Spinner' is defined but never used.","Expected '===' and instead saw '=='.",["79"],["80"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [apiWeb, initializeValues]",{"range":"84","text":"85"},[2147,2155],"[apiWeb, initializeValues]"]